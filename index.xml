<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Denis Kazakov</title>
    <link>https://kazakov.ru.net/</link>
    <description>Recent content on Denis Kazakov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us,ru-ru</language>
    <lastBuildDate>Fri, 01 Oct 2021 20:00:00 +0300</lastBuildDate><atom:link href="https://kazakov.ru.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Camel case to snake case serializer in Django REST framework</title>
      <link>https://kazakov.ru.net/notes/camel_case_to_snake_case/</link>
      <pubDate>Fri, 01 Oct 2021 20:00:00 +0300</pubDate>
      
      <guid>https://kazakov.ru.net/notes/camel_case_to_snake_case/</guid>
      <description>How to convert a dict with camel case keys into a dict with snake case keys?
Check out below
from django.utils.functional import cached_property from rest_framework import serializers class KeyMappingSerializerMixin: Meta: type @cached_property def fields(self): # noinspection PyUnresolvedReferences fields = super().fields key_map = getattr(self.Meta, &amp;#39;key_map&amp;#39;, {}) for target, source in key_map.items(): if target != source: fields[target].bind(field_name=source, parent=self) return fields class ExternalServiceCallbackSerializer(KeyMappingSerializerMixin, serializers.ModelSerializer): class Meta: model = ExternalServiceCallback fields = (&amp;#39;timestamp&amp;#39;, &amp;#39;service_name&amp;#39;, &amp;#39;user_data&amp;#39;) key_map = { &amp;#39;timestamp&amp;#39;: &amp;#39;createdAt&amp;#39;, &amp;#39;service_name&amp;#39;: &amp;#39;service&amp;#39;, &amp;#39;user_data&amp;#39;: &amp;#39;userData&amp;#39;, } </description>
    </item>
    
    <item>
      <title>Denis Kazakov</title>
      <link>https://kazakov.ru.net/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kazakov.ru.net/about/</guid>
      <description>Salute! üëã My name is Denis, and I am a backend developer. I write in Python üêç and love doing optimization: diving deep into a problem and looking for solutions to it.
I am very interested in high-load distributed systems. I believe that a long-living project requires good test coverage and possibly ugly but strict code style. And MVP is MVP.
I am self-taught and have no computer science education, but before entering IT, I had some entrepreneurial and leadership experience, so I am well aware of how to prioritize business requirements and perfectionism.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://kazakov.ru.net/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kazakov.ru.net/projects/</guid>
      <description>üí° Suggestions to open source I want to be useful to the community and suggest improvements for tools I use myself üòä.
Django extensions When I worked on a few new features, I often came across a situation where I had to switch between branches, roll back migrations of one branch, and apply migrations of another. As long as you work in the same Django app, no problems arise. But when migrations involve multiple Django applications, rolling back of each application becomes a frustrating chore.</description>
    </item>
    
    
  </channel>
</rss>
